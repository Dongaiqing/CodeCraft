(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{112:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.Comment = exports.DownvoteDisplay = exports.UpvoteDisplay = void 0;\n\nvar _react = _interopRequireWildcard(__webpack_require__(1));\n\nvar _axios = _interopRequireDefault(__webpack_require__(11));\n\nvar _reactFontawesome = __webpack_require__(19);\n\nvar _freeSolidSvgIcons = __webpack_require__(20);\n\nvar _index = __webpack_require__(295);\n\nvar _reactQuill = _interopRequireDefault(__webpack_require__(296));\n\n__webpack_require__(399);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar post_comments_url = \'/post_comments\';\nvar get_comments_url = \'/get_comments\';\nvar update_comments_url = \'/update_comments\';\nvar num_comments = 10;\n/*\n* Expected data info:\n*   comment id\n*   user\n*   comments\n*   upvotes\n*   downvotes\n*   secondary\n* */\n// expects image and name\n\nvar FirstLevelCommentDataStructure = function FirstLevelCommentDataStructure() {\n  _classCallCheck(this, FirstLevelCommentDataStructure);\n\n  this.id = 0;\n  this.imageSource = \'\';\n  this.user = \'\';\n  this.comment = \'\';\n  this.upvoteNum = 0;\n  this.downvoteNum = 0;\n  this.secondaryComments = [];\n};\n\nvar SecondLevelCommentDataStructure = function SecondLevelCommentDataStructure() {\n  _classCallCheck(this, SecondLevelCommentDataStructure);\n\n  this.id = 0;\n  this.imageSource = \'\';\n  this.user = \'\';\n  this.comment = \'\';\n  this.upvoteNum = 0;\n  this.downvoteNum = 0;\n};\n\nvar UpvoteDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpvoteDisplay, _Component);\n\n  function UpvoteDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, UpvoteDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpvoteDisplay).call(this, props));\n    _this.state = {\n      clicked: false\n    };\n    return _this;\n  }\n\n  _createClass(UpvoteDisplay, [{\n    key: "regulateNum",\n    value: function regulateNum() {\n      var prev_value = this.props.num;\n      console.log(prev_value);\n\n      if (this.state.clicked === false) {\n        this.setState({\n          clicked: true\n        });\n        this.props.updating_upvote(prev_value + 1);\n      } else {\n        this.setState({\n          clicked: false\n        });\n        this.props.updating_upvote(prev_value - 1);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement("div", null, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowUp,\n        className: \'UpvoteIcon\',\n        onClick: function onClick() {\n          return _this2.regulateNum();\n        }\n      }), _react.default.createElement("span", {\n        style: {\n          marginLeft: \'0.5em\'\n        }\n      }, this.props.num));\n    }\n  }]);\n\n  return UpvoteDisplay;\n}(_react.Component);\n\nexports.UpvoteDisplay = UpvoteDisplay;\n\nvar DownvoteDisplay =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DownvoteDisplay, _Component2);\n\n  function DownvoteDisplay(props) {\n    var _this3;\n\n    _classCallCheck(this, DownvoteDisplay);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DownvoteDisplay).call(this, props));\n    _this3.state = {\n      clicked: false\n    };\n    return _this3;\n  }\n\n  _createClass(DownvoteDisplay, [{\n    key: "regulateNum",\n    value: function regulateNum() {\n      var prev_value = this.props.num;\n\n      if (this.state.clicked === false) {\n        this.setState({\n          clicked: true\n        });\n        this.props.updating_downvote(prev_value - 1);\n      } else {\n        this.setState({\n          clicked: false\n        });\n        this.props.updating_downvote(prev_value + 1);\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this4 = this;\n\n      return _react.default.createElement("div", null, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowDown,\n        onClick: function onClick() {\n          return _this4.regulateNum();\n        }\n      }), _react.default.createElement("span", {\n        style: {\n          marginLeft: \'0.5em\'\n        }\n      }, this.props.num));\n    }\n  }]);\n\n  return DownvoteDisplay;\n}(_react.Component);\n\nexports.DownvoteDisplay = DownvoteDisplay;\n\nvar UserInfo =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(UserInfo, _Component3);\n\n  function UserInfo() {\n    _classCallCheck(this, UserInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserInfo).apply(this, arguments));\n  }\n\n  _createClass(UserInfo, [{\n    key: "render",\n    value: function render() {\n      return _react.default.createElement("div", {\n        style: {\n          display: \'flex\',\n          flexDirection: \'row\'\n        }\n      }, _react.default.createElement("img", {\n        style: {\n          order: 1,\n          marginRight: \'1em\',\n          maxWidth: \'5em\',\n          maxHeight: \'5em\',\n          verticalAlign: \'middle\',\n          boxShadow: \'0 0 0.2em grey\'\n        },\n        src: this.props.src,\n        alt: this.props.user\n      }), _react.default.createElement("h4", {\n        style: {\n          order: 2,\n          verticalAlign: \'center\'\n        }\n      }, this.props.user));\n    }\n  }]);\n\n  return UserInfo;\n}(_react.Component);\n\nvar SecondLevelComment =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(SecondLevelComment, _Component4);\n\n  function SecondLevelComment() {\n    _classCallCheck(this, SecondLevelComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SecondLevelComment).apply(this, arguments));\n  }\n\n  _createClass(SecondLevelComment, [{\n    key: "render",\n    value: function render() {\n      var _this5 = this;\n\n      var curr_comment = this.props.comment_ref;\n      return _react.default.createElement("div", {\n        className: \'SecondLevelComment_content\'\n      }, _react.default.createElement("h4", null, _react.default.createElement("span", null, curr_comment.user)), _react.default.createElement("div", {\n        className: \'comment_flex\'\n      }, _react.default.createElement("div", {\n        className: \'comment_blockleft\'\n      }, _react.default.createElement(UpvoteDisplay, {\n        num: curr_comment.upvoteNum,\n        updating_upvote: function updating_upvote(val) {\n          return _this5.props.updating_upvote(curr_comment.id, val);\n        }\n      }), _react.default.createElement(DownvoteDisplay, {\n        num: curr_comment.downvoteNum,\n        updating_downvote: function updating_downvote(val) {\n          return _this5.props.updating_downvote(curr_comment.id, val);\n        }\n      })), _react.default.createElement("div", {\n        className: \'comment_blockright\'\n      }, _react.default.createElement("section", {\n        dangerouslySetInnerHTML: {\n          __html: curr_comment.comment\n        }\n      }))));\n    }\n  }]);\n\n  return SecondLevelComment;\n}(_react.Component);\n\nvar CommentEditor =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(CommentEditor, _Component5);\n\n  function CommentEditor(props) {\n    var _this6;\n\n    _classCallCheck(this, CommentEditor);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(CommentEditor).call(this, props));\n    _this6.state = {\n      text: \'\'\n    };\n    return _this6;\n  }\n\n  _createClass(CommentEditor, [{\n    key: "updateComment",\n    value: function updateComment() {\n      var _this7 = this;\n\n      var current_user = this.props.current_user;\n      var current_question_id = this.props.current_question_id; // this variable can be null/undefined!\n\n      var current_parent_id = this.props.current_parent_comment_id == null ? -1 : this.props.current_parent_comment_id;\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n      _axios.default.post(post_comments_url, {\n        username: current_user,\n        question_id: current_question_id,\n        parent_comment_id: current_parent_id,\n        is_for_road_map: is_for_road_map,\n        content: this.state.text\n      }).then(function (response) {\n        console.log(\'Send comment to backend\', response.data);\n        var id = response.data[0];\n\n        _this7.props.updating_comment(id, _this7.state.text);\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this8 = this;\n\n      return _react.default.createElement("div", null, _react.default.createElement("div", null, _react.default.createElement(_reactQuill.default, {\n        theme: "snow",\n        value: this.state.text,\n        onChange: function onChange(value) {\n          return _this8.setState({\n            text: value\n          });\n        }\n      })), _react.default.createElement("button", {\n        onClick: function onClick() {\n          return _this8.updateComment();\n        }\n      }, "Submit"));\n    }\n  }]);\n\n  return CommentEditor;\n}(_react.Component);\n\nvar FirstLevelComment =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(FirstLevelComment, _Component6);\n\n  function FirstLevelComment(props) {\n    var _this9;\n\n    _classCallCheck(this, FirstLevelComment);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(FirstLevelComment).call(this, props));\n    _this9.state = {\n      is_fold: true\n    };\n    return _this9;\n  }\n\n  _createClass(FirstLevelComment, [{\n    key: "render",\n    value: function render() {\n      var _this10 = this;\n\n      var curr_comment = this.props.comment_ref;\n      var img_source = curr_comment.imageSource;\n\n      if (img_source === \'\' || img_source === undefined || img_source === null) {\n        img_source = this.props.user_profile.userPicSource;\n      }\n\n      var secondary_comments = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = curr_comment.secondaryComments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var second_level_comment = _step.value;\n          secondary_comments.push(_react.default.createElement(SecondLevelComment, {\n            key: \'SecondLevelComment\' + second_level_comment.id,\n            comment_ref: second_level_comment,\n            updating_upvote: function updating_upvote(id, val) {\n              return _this10.props.updating_upvote(id, val);\n            },\n            updating_downvote: function updating_downvote(id, val) {\n              return _this10.props.updating_downvote(id, val);\n            }\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return _react.default.createElement("div", {\n        className: \'firstLevelComments_content\'\n      }, _react.default.createElement("div", null, _react.default.createElement("div", null, _react.default.createElement(UserInfo, {\n        src: img_source,\n        user: curr_comment.user\n      })), _react.default.createElement("div", {\n        className: \'comment_flex\'\n      }, _react.default.createElement("div", {\n        className: \'comment_blockleft\'\n      }, _react.default.createElement("div", null, _react.default.createElement(UpvoteDisplay, {\n        num: curr_comment.upvoteNum,\n        updating_upvote: function updating_upvote(val) {\n          return _this10.props.updating_upvote(curr_comment.id, val);\n        }\n      })), _react.default.createElement("div", null, _react.default.createElement(DownvoteDisplay, {\n        num: curr_comment.downvoteNum,\n        updating_downvote: function updating_downvote(val) {\n          return _this10.props.updating_downvote(curr_comment.id, val);\n        }\n      }))), _react.default.createElement("div", {\n        className: \'comment_blockright\'\n      }, _react.default.createElement("section", {\n        dangerouslySetInnerHTML: {\n          __html: curr_comment.comment\n        }\n      })))), _react.default.createElement("div", null, secondary_comments), _react.default.createElement("div", null, _react.default.createElement("h5", null, "Write followups ", this.state.is_fold ? _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _index.faArrowRight,\n        onClick: function onClick() {\n          return _this10.setState({\n            is_fold: false\n          });\n        }\n      }) : _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowDown,\n        onClick: function onClick() {\n          return _this10.setState({\n            is_fold: true\n          });\n        }\n      })), this.state.is_fold ? null : _react.default.createElement("div", null, _react.default.createElement(CommentEditor, {\n        updating_comment: function updating_comment(id, string) {\n          return _this10.props.updating_comment(id, string, curr_comment.id);\n        },\n        current_user: this.props.current_user,\n        current_question_id: this.props.current_question_id,\n        current_parent_comment_id: curr_comment.id\n      }))));\n    }\n  }]);\n\n  return FirstLevelComment;\n}(_react.Component);\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component7) {\n  _inherits(Comment, _Component7);\n\n  function Comment(props) {\n    var _this11;\n\n    _classCallCheck(this, Comment);\n\n    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n    _this11.state = {\n      comments: [],\n      pageNumber: 0,\n      is_fold: true\n    };\n    return _this11;\n  }\n\n  _createClass(Comment, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this12 = this;\n\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n      _axios.default.get(get_comments_url, {\n        params: {\n          is_for_road_map: is_for_road_map,\n          question_id: this.props.question_id\n        }\n      }).then(function (response) {\n        console.log(\'Get all comments:\', response.data, Object.keys(response.data).length);\n\n        if (Object.keys(response.data).length > 0) {\n          _this12.setState({\n            comments: response.data,\n            prev_question_id: _this12.props.question_id\n          });\n        }\n      });\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps) {\n      var _this13 = this;\n\n      if (this.props.question_id !== prevProps.question_id) {\n        var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n        _axios.default.get(get_comments_url, {\n          params: {\n            is_for_road_map: is_for_road_map,\n            question_id: this.props.question_id\n          }\n        }).then(function (response) {\n          _this13.setState({\n            comments: response.data,\n            pageNumber: 0,\n            is_fold: true\n          });\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: "updatingVote",\n    value: function updatingVote(id, val, is_upvote) {\n      var _this14 = this;\n\n      _axios.default.post(update_comments_url, {\n        username: this.props.user,\n        comment_id: id,\n        value: val,\n        is_upvote: is_upvote === true ? 1 : 0\n      }).then(function (response) {\n        var prev_comments = JSON.parse(JSON.stringify(_this14.state.comments));\n        var found = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = prev_comments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var first_lev_question = _step2.value;\n\n            if (first_lev_question.id === id) {\n              if (is_upvote) {\n                console.log(\'first_lev_question\', first_lev_question, val);\n                first_lev_question.upvoteNum = val;\n              } else {\n                first_lev_question.downvoteNum = val;\n              }\n\n              found = 1;\n              break;\n            }\n\n            if (found === 1) {\n              break;\n            }\n\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = first_lev_question.secondaryComments[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var second_lev_question = _step3.value;\n\n                if (second_lev_question.id === id) {\n                  if (is_upvote) {\n                    second_lev_question.upvoteNum = val;\n                  } else {\n                    second_lev_question.downvoteNum = val;\n                  }\n\n                  found = 1;\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            if (found === 1) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        console.log(prev_comments);\n\n        _this14.setState({\n          comments: prev_comments\n        });\n      });\n    }\n  }, {\n    key: "navigatePage",\n    value: function navigatePage(is_nextpage) {\n      var prev_pageNumber = this.state.pageNumber;\n\n      if (is_nextpage) {\n        if (Math.abs((prev_pageNumber + 1) * num_comments - this.state.comments.length) > 0) {\n          this.setState({\n            pageNumber: prev_pageNumber + 1\n          });\n        }\n      } else {\n        console.log(prev_pageNumber);\n\n        if (prev_pageNumber - 1 >= 0) {\n          this.setState({\n            pageNumber: prev_pageNumber - 1\n          });\n        }\n      }\n    }\n  }, {\n    key: "insertComment",\n    value: function insertComment(id, string, parent_id) {\n      if (parent_id !== null && parent_id !== undefined) {\n        var data = {};\n        data.imageSource = \'\';\n        data.secondaryComments = [];\n        data.user = this.props.user;\n        data.comment = string;\n        data.downvoteNum = 0;\n        data.upvoteNum = 0;\n        data.id = id;\n        var prev_comments = JSON.parse(JSON.stringify(this.state.comments));\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = prev_comments[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var first_lev_question = _step4.value;\n\n            if (first_lev_question.id === parent_id) {\n              first_lev_question.secondaryComments.unshift(data);\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        this.setState({\n          comments: prev_comments\n        });\n      } else {\n        var _data = {};\n        _data.user = this.props.user;\n        _data.comment = string;\n        _data.id = id;\n        _data.downvoteNum = 0;\n        _data.upvoteNum = 0;\n        _data.secondaryComments = [];\n        _data.imageSource = \'\';\n\n        var _prev_comments = JSON.parse(JSON.stringify(this.state.comments));\n\n        _prev_comments.unshift(_data);\n\n        this.setState({\n          comments: _prev_comments\n        });\n      }\n    } // currently the comments only allow two-level structures\n\n  }, {\n    key: "render",\n    value: function render() {\n      var _this15 = this;\n\n      var blocks = null;\n\n      if (this.state.comments.length > 0) {\n        var user = this.props.user;\n        var current_question_id = this.props.question_id;\n        var is_for_road_map = this.props.is_for_road_map;\n        blocks = [];\n\n        for (var i = this.state.pageNumber * num_comments; i < (this.state.pageNumber + 1) * num_comments; i += 1) {\n          if (i >= this.state.comments.length) {\n            continue;\n          }\n\n          blocks.push(_react.default.createElement(FirstLevelComment, {\n            key: \'FirstLevelComment\' + this.state.comments[i].id,\n            comment_ref: this.state.comments[i],\n            updating_upvote: function updating_upvote(id, val) {\n              return _this15.updatingVote(id, val, true);\n            },\n            updating_downvote: function updating_downvote(id, val) {\n              return _this15.updatingVote(id, val, false);\n            },\n            updating_comment: function updating_comment(id, string, parent_id) {\n              return _this15.insertComment(id, string, parent_id);\n            },\n            current_user: user,\n            current_question_id: current_question_id,\n            user_profile: this.props.user_profile\n          }));\n        }\n      }\n\n      return _react.default.createElement("section", {\n        className: \'questionComments_content\'\n      }, _react.default.createElement("h3", null, "Show/Leave Comments ", this.state.is_fold ? _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _index.faArrowRight,\n        onClick: function onClick() {\n          return _this15.setState({\n            is_fold: false\n          });\n        }\n      }) : _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowDown,\n        onClick: function onClick() {\n          return _this15.setState({\n            is_fold: true\n          });\n        }\n      })), this.state.is_fold ? null : _react.default.createElement("div", null, _react.default.createElement("div", null, _react.default.createElement(CommentEditor, {\n        for_road_map: this.props.is_for_road_map,\n        updating_comment: function updating_comment(id, string) {\n          return _this15.insertComment(id, string, null);\n        },\n        current_user: this.props.user,\n        current_question_id: this.props.question_id\n      })), _react.default.createElement("div", null, blocks), _react.default.createElement("div", {\n        style: {\n          width: \'100%\',\n          textAlign: \'center\'\n        }\n      }, _react.default.createElement("button", {\n        style: {\n          display: \'inline-block\',\n          marginRight: \'1em\'\n        },\n        onClick: function onClick() {\n          return _this15.navigatePage(false);\n        }\n      }, "Previous Page"), _react.default.createElement("button", {\n        style: {\n          display: \'inline-block\'\n        },\n        onClick: function onClick() {\n          return _this15.navigatePage(true);\n        }\n      }, "Next Page"))));\n    }\n  }]);\n\n  return Comment;\n}(_react.Component);\n\nexports.Comment = Comment;\n\n//# sourceMappingURL=Comment.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///112\n')},131:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.Rating = void 0;\n\nvar _react = _interopRequireWildcard(__webpack_require__(1));\n\nvar _axios = _interopRequireDefault(__webpack_require__(11));\n\nvar _reactStarRatingComponent = _interopRequireDefault(__webpack_require__(401));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar rating_submission_url = \'/post_rating\';\nvar rating_receiving_url = \'/get_rating\';\n\nvar SubmitRating =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubmitRating, _Component);\n\n  function SubmitRating() {\n    _classCallCheck(this, SubmitRating);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SubmitRating).apply(this, arguments));\n  }\n\n  _createClass(SubmitRating, [{\n    key: "render",\n    value: function render() {\n      var _this = this;\n\n      return _react.default.createElement("div", {\n        className: \'submitRating_content\'\n      }, _react.default.createElement("h3", null, "Submit your rating here!"), _react.default.createElement(_reactStarRatingComponent.default, {\n        name: "Rating",\n        starCount: 5,\n        value: this.props.rating,\n        onStarClick: function onStarClick(nextValue, prevValue, name) {\n          return _this.props.ratingOnClickHander(nextValue, prevValue, name);\n        }\n      }));\n    }\n  }]);\n\n  return SubmitRating;\n}(_react.Component);\n\nvar DisplayRating =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DisplayRating, _Component2);\n\n  function DisplayRating(props) {\n    var _this2;\n\n    _classCallCheck(this, DisplayRating);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DisplayRating).call(this, props));\n    _this2.state = {\n      ratings: 0\n    };\n    return _this2;\n  }\n\n  _createClass(DisplayRating, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n      _axios.default.get(rating_receiving_url, {\n        params: {\n          question_id: this.props.question_id,\n          is_for_road_map: is_for_road_map\n        }\n      }).then(function (response) {\n        _this3.setState({\n          ratings: response.data\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return _react.default.createElement("div", {\n        className: \'displayRating_content\'\n      }, _react.default.createElement("h4", null, "Users\' ratings"), _react.default.createElement(_reactStarRatingComponent.default, {\n        name: "Rating",\n        starCount: 5,\n        value: this.state.ratings\n      }));\n    }\n  }]);\n\n  return DisplayRating;\n}(_react.Component);\n\nvar Rating =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Rating, _Component3);\n\n  function Rating(props) {\n    var _this4;\n\n    _classCallCheck(this, Rating);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Rating).call(this, props));\n    _this4.state = {\n      rating: 0,\n      is_display_rating: false\n    };\n    return _this4;\n  }\n\n  _createClass(Rating, [{\n    key: "componentWillReceiveProps",\n    value: function componentWillReceiveProps(newprops) {\n      this.setState({\n        rating: 0,\n        is_display_rating: false\n      });\n    }\n  }, {\n    key: "ratingOnClickHander",\n    value: function ratingOnClickHander(nextValue, prevValue, name) {\n      var _this5 = this;\n\n      this.setState({\n        rating: nextValue\n      });\n      var user = this.props.user;\n      var current_question_id = this.props.question_id;\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n      console.log(\'is_for_road_map\', is_for_road_map);\n\n      _axios.default.post(rating_submission_url, {\n        question_id: current_question_id,\n        is_for_road_map: is_for_road_map,\n        value: nextValue\n      }).then(function (response) {\n        _this5.setState({\n          is_display_rating: true\n        });\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this6 = this;\n\n      console.log(\'change question id,\', this.props.question_id, this.state);\n      return _react.default.createElement("div", {\n        className: \'rating_content\'\n      }, this.state.is_display_rating ? _react.default.createElement(DisplayRating, {\n        for_road_map: this.props.for_road_map,\n        question_id: this.props.question_id\n      }) : _react.default.createElement(SubmitRating, {\n        rating: this.state.rating,\n        ratingOnClickHander: function ratingOnClickHander(nextValue, prevValue, name) {\n          return _this6.ratingOnClickHander(nextValue, prevValue, name);\n        }\n      }));\n    }\n  }]);\n\n  return Rating;\n}(_react.Component);\n\nexports.Rating = Rating;\n\n//# sourceMappingURL=Rating.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///131\n')}}]);