(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./modules/coding_panel_modules/Comment.js":
/*!*************************************************!*\
  !*** ./modules/coding_panel_modules/Comment.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Comment = exports.DownvoteDisplay = exports.UpvoteDisplay = void 0;\n\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"./node_modules/axios/index.js\"));\n\nvar _reactFontawesome = __webpack_require__(/*! @fortawesome/react-fontawesome */ \"./node_modules/@fortawesome/react-fontawesome/index.es.js\");\n\nvar _freeSolidSvgIcons = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.es.js\");\n\nvar _index = __webpack_require__(/*! @fortawesome/free-solid-svg-icons/index */ \"./node_modules/@fortawesome/free-solid-svg-icons/index.js\");\n\nvar _reactQuill = _interopRequireDefault(__webpack_require__(/*! react-quill */ \"./node_modules/react-quill/lib/index.js\"));\n\n__webpack_require__(/*! react-quill/dist/quill.snow.css */ \"./node_modules/react-quill/dist/quill.snow.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar post_comments_url = '/post_comments';\nvar get_comments_url = '/get_comments';\nvar update_comments_url = '/update_comments';\nvar num_comments = 10;\n/*\n* Expected data info:\n*   comment id\n*   user\n*   comments\n*   upvotes\n*   downvotes\n*   secondary\n* */\n// expects image and name\n\nvar FirstLevelCommentDataStructure = function FirstLevelCommentDataStructure() {\n  _classCallCheck(this, FirstLevelCommentDataStructure);\n\n  this.id = 0;\n  this.imageSource = '';\n  this.user = '';\n  this.comment = '';\n  this.upvoteNum = 0;\n  this.downvoteNum = 0;\n  this.secondaryComments = [];\n};\n\nvar SecondLevelCommentDataStructure = function SecondLevelCommentDataStructure() {\n  _classCallCheck(this, SecondLevelCommentDataStructure);\n\n  this.id = 0;\n  this.imageSource = '';\n  this.user = '';\n  this.comment = '';\n  this.upvoteNum = 0;\n  this.downvoteNum = 0;\n};\n\nvar UpvoteDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpvoteDisplay, _Component);\n\n  function UpvoteDisplay(props) {\n    var _this;\n\n    _classCallCheck(this, UpvoteDisplay);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpvoteDisplay).call(this, props));\n    _this.state = {\n      clicked: false\n    };\n    return _this;\n  }\n\n  _createClass(UpvoteDisplay, [{\n    key: \"regulateNum\",\n    value: function regulateNum() {\n      var prev_value = this.props.num;\n      console.log(prev_value);\n\n      if (this.state.clicked === false) {\n        this.setState({\n          clicked: true\n        });\n        this.props.updating_upvote(prev_value + 1);\n      } else {\n        this.setState({\n          clicked: false\n        });\n        this.props.updating_upvote(prev_value - 1);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowUp,\n        className: 'UpvoteIcon',\n        onClick: function onClick() {\n          return _this2.regulateNum();\n        }\n      }), _react.default.createElement(\"span\", {\n        style: {\n          marginLeft: '0.5em'\n        }\n      }, this.props.num));\n    }\n  }]);\n\n  return UpvoteDisplay;\n}(_react.Component);\n\nexports.UpvoteDisplay = UpvoteDisplay;\n\nvar DownvoteDisplay =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DownvoteDisplay, _Component2);\n\n  function DownvoteDisplay(props) {\n    var _this3;\n\n    _classCallCheck(this, DownvoteDisplay);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DownvoteDisplay).call(this, props));\n    _this3.state = {\n      clicked: false\n    };\n    return _this3;\n  }\n\n  _createClass(DownvoteDisplay, [{\n    key: \"regulateNum\",\n    value: function regulateNum() {\n      var prev_value = this.props.num;\n\n      if (this.state.clicked === false) {\n        this.setState({\n          clicked: true\n        });\n        this.props.updating_downvote(prev_value - 1);\n      } else {\n        this.setState({\n          clicked: false\n        });\n        this.props.updating_downvote(prev_value + 1);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return _react.default.createElement(\"div\", null, _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowDown,\n        onClick: function onClick() {\n          return _this4.regulateNum();\n        }\n      }), _react.default.createElement(\"span\", {\n        style: {\n          marginLeft: '0.5em'\n        }\n      }, this.props.num));\n    }\n  }]);\n\n  return DownvoteDisplay;\n}(_react.Component);\n\nexports.DownvoteDisplay = DownvoteDisplay;\n\nvar UserInfo =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(UserInfo, _Component3);\n\n  function UserInfo() {\n    _classCallCheck(this, UserInfo);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UserInfo).apply(this, arguments));\n  }\n\n  _createClass(UserInfo, [{\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        }\n      }, _react.default.createElement(\"img\", {\n        style: {\n          order: 1,\n          marginRight: '1em',\n          maxWidth: '5em',\n          maxHeight: '5em',\n          verticalAlign: 'middle',\n          boxShadow: '0 0 0.2em grey'\n        },\n        src: this.props.src,\n        alt: this.props.user\n      }), _react.default.createElement(\"h4\", {\n        style: {\n          order: 2,\n          verticalAlign: 'center'\n        }\n      }, this.props.user));\n    }\n  }]);\n\n  return UserInfo;\n}(_react.Component);\n\nvar SecondLevelComment =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(SecondLevelComment, _Component4);\n\n  function SecondLevelComment() {\n    _classCallCheck(this, SecondLevelComment);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SecondLevelComment).apply(this, arguments));\n  }\n\n  _createClass(SecondLevelComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var curr_comment = this.props.comment_ref;\n      return _react.default.createElement(\"div\", {\n        className: 'SecondLevelComment_content'\n      }, _react.default.createElement(\"h4\", null, _react.default.createElement(\"span\", null, curr_comment.user)), _react.default.createElement(\"div\", {\n        className: 'comment_flex'\n      }, _react.default.createElement(\"div\", {\n        className: 'comment_blockleft'\n      }, _react.default.createElement(UpvoteDisplay, {\n        num: curr_comment.upvoteNum,\n        updating_upvote: function updating_upvote(val) {\n          return _this5.props.updating_upvote(curr_comment.id, val);\n        }\n      }), _react.default.createElement(DownvoteDisplay, {\n        num: curr_comment.downvoteNum,\n        updating_downvote: function updating_downvote(val) {\n          return _this5.props.updating_downvote(curr_comment.id, val);\n        }\n      })), _react.default.createElement(\"div\", {\n        className: 'comment_blockright'\n      }, _react.default.createElement(\"section\", {\n        dangerouslySetInnerHTML: {\n          __html: curr_comment.comment\n        }\n      }))));\n    }\n  }]);\n\n  return SecondLevelComment;\n}(_react.Component);\n\nvar CommentEditor =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(CommentEditor, _Component5);\n\n  function CommentEditor(props) {\n    var _this6;\n\n    _classCallCheck(this, CommentEditor);\n\n    _this6 = _possibleConstructorReturn(this, _getPrototypeOf(CommentEditor).call(this, props));\n    _this6.state = {\n      text: ''\n    };\n    return _this6;\n  }\n\n  _createClass(CommentEditor, [{\n    key: \"updateComment\",\n    value: function updateComment() {\n      var _this7 = this;\n\n      var current_user = this.props.current_user;\n      var current_question_id = this.props.current_question_id; // this variable can be null/undefined!\n\n      var current_parent_id = this.props.current_parent_comment_id == null ? -1 : this.props.current_parent_comment_id;\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n      _axios.default.post(post_comments_url, {\n        username: current_user,\n        question_id: current_question_id,\n        parent_comment_id: current_parent_id,\n        is_for_road_map: is_for_road_map,\n        content: this.state.text\n      }).then(function (response) {\n        console.log('Send comment to backend', response.data);\n        var id = response.data;\n\n        _this7.props.updating_comment(id, _this7.state.text);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      return _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", null, _react.default.createElement(_reactQuill.default, {\n        theme: \"snow\",\n        value: this.state.text,\n        onChange: function onChange(value) {\n          return _this8.setState({\n            text: value\n          });\n        }\n      })), _react.default.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this8.updateComment();\n        }\n      }, \"Submit\"));\n    }\n  }]);\n\n  return CommentEditor;\n}(_react.Component);\n\nvar FirstLevelComment =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(FirstLevelComment, _Component6);\n\n  function FirstLevelComment(props) {\n    var _this9;\n\n    _classCallCheck(this, FirstLevelComment);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(FirstLevelComment).call(this, props));\n    _this9.state = {\n      is_fold: true\n    };\n    return _this9;\n  }\n\n  _createClass(FirstLevelComment, [{\n    key: \"render\",\n    value: function render() {\n      var _this10 = this;\n\n      var curr_comment = this.props.comment_ref;\n      var secondary_comments = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = curr_comment.secondaryComments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var second_level_comment = _step.value;\n          secondary_comments.push(_react.default.createElement(SecondLevelComment, {\n            key: 'SecondLevelComment' + second_level_comment.id,\n            comment_ref: second_level_comment,\n            updating_upvote: function updating_upvote(id, val) {\n              return _this10.props.updating_upvote(id, val);\n            },\n            updating_downvote: function updating_downvote(id, val) {\n              return _this10.props.updating_downvote(id, val);\n            }\n          }));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return _react.default.createElement(\"div\", {\n        className: 'firstLevelComments_content'\n      }, _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", null, _react.default.createElement(UserInfo, {\n        src: curr_comment.imageSource,\n        user: curr_comment.user\n      })), _react.default.createElement(\"div\", {\n        className: 'comment_flex'\n      }, _react.default.createElement(\"div\", {\n        className: 'comment_blockleft'\n      }, _react.default.createElement(\"div\", null, _react.default.createElement(UpvoteDisplay, {\n        num: curr_comment.upvoteNum,\n        updating_upvote: function updating_upvote(val) {\n          return _this10.props.updating_upvote(curr_comment.id, val);\n        }\n      })), _react.default.createElement(\"div\", null, _react.default.createElement(DownvoteDisplay, {\n        num: curr_comment.downvoteNum,\n        updating_downvote: function updating_downvote(val) {\n          return _this10.props.updating_downvote(curr_comment.id, val);\n        }\n      }))), _react.default.createElement(\"div\", {\n        className: 'comment_blockright'\n      }, _react.default.createElement(\"section\", {\n        dangerouslySetInnerHTML: {\n          __html: curr_comment.comment\n        }\n      })))), _react.default.createElement(\"div\", null, secondary_comments), _react.default.createElement(\"div\", null, _react.default.createElement(\"h5\", null, \"Write followups \", this.state.is_fold ? _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _index.faArrowRight,\n        onClick: function onClick() {\n          return _this10.setState({\n            is_fold: false\n          });\n        }\n      }) : _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowDown,\n        onClick: function onClick() {\n          return _this10.setState({\n            is_fold: true\n          });\n        }\n      })), this.state.is_fold ? null : _react.default.createElement(\"div\", null, _react.default.createElement(CommentEditor, {\n        updating_comment: function updating_comment(id, string) {\n          return _this10.props.updating_comment(id, string, curr_comment.id);\n        },\n        current_user: this.props.current_user,\n        current_question_id: this.props.current_question_id,\n        current_parent_comment_id: curr_comment.id\n      }))));\n    }\n  }]);\n\n  return FirstLevelComment;\n}(_react.Component);\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Component7) {\n  _inherits(Comment, _Component7);\n\n  function Comment(props) {\n    var _this11;\n\n    _classCallCheck(this, Comment);\n\n    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n    _this11.state = {\n      comments: [],\n      pageNumber: 0,\n      is_fold: true\n    };\n    return _this11;\n  }\n\n  _createClass(Comment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this12 = this;\n\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n      _axios.default.get(get_comments_url, {\n        params: {\n          is_for_road_map: is_for_road_map,\n          question_id: this.props.question_id\n        }\n      }).then(function (response) {\n        console.log('Get all comments:', response.data, Object.keys(response.data).length);\n\n        if (Object.keys(response.data).length > 0) {\n          _this12.setState({\n            comments: response.data\n          });\n        }\n      });\n    }\n  }, {\n    key: \"updatingVote\",\n    value: function updatingVote(id, val, is_upvote) {\n      var _this13 = this;\n\n      _axios.default.post(update_comments_url, {\n        username: this.props.user,\n        comment_id: id,\n        value: val,\n        is_upvote: is_upvote === true ? 1 : 0\n      }).then(function (response) {\n        var prev_comments = JSON.parse(JSON.stringify(_this13.state.comments));\n        var found = 0;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = prev_comments[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var first_lev_question = _step2.value;\n\n            if (first_lev_question.id === id) {\n              if (is_upvote) {\n                first_lev_question.upvoteNum = val;\n              } else {\n                first_lev_question.downvoteNum = val;\n              }\n\n              found = 1;\n              break;\n            }\n\n            if (found === 1) {\n              break;\n            }\n\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n              for (var _iterator3 = first_lev_question.secondaryComments[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var second_lev_question = _step3.value;\n\n                if (second_lev_question.id === id) {\n                  if (is_upvote) {\n                    second_lev_question.upvoteNum = val;\n                  } else {\n                    second_lev_question.downvoteNum = val;\n                  }\n\n                  found = 1;\n                  break;\n                }\n              }\n            } catch (err) {\n              _didIteratorError3 = true;\n              _iteratorError3 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                  _iterator3.return();\n                }\n              } finally {\n                if (_didIteratorError3) {\n                  throw _iteratorError3;\n                }\n              }\n            }\n\n            if (found === 1) {\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        _this13.setState({\n          comments: prev_comments\n        });\n      });\n    }\n  }, {\n    key: \"navigatePage\",\n    value: function navigatePage(is_nextpage) {\n      var prev_pageNumber = this.state.pageNumber;\n\n      if (is_nextpage) {\n        if ((prev_pageNumber + 1) * num_comments - this.state.comments.length < num_comments) {\n          this.setState({\n            pageNumber: prev_pageNumber + 1\n          });\n        }\n      } else {\n        if (prev_pageNumber - 1 > 0) {\n          this.setState({\n            pageNumber: prev_pageNumber - 1\n          });\n        }\n      }\n    }\n  }, {\n    key: \"insertComment\",\n    value: function insertComment(id, string, parent_id) {\n      if (parent_id !== null && parent_id !== undefined) {\n        var data = new SecondLevelCommentDataStructure();\n        data.user = this.props.user;\n        data.comment = string;\n        data.downvoteNum = 0;\n        data.upvoteNum = 0;\n        data.id = id;\n        var prev_comments = JSON.parse(JSON.stringify(this.state.comments));\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n          for (var _iterator4 = prev_comments[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var first_lev_question = _step4.value;\n\n            if (first_lev_question.id === parent_id) {\n              first_lev_question.secondaryComments.unshift(data);\n              break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError4 = true;\n          _iteratorError4 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n              _iterator4.return();\n            }\n          } finally {\n            if (_didIteratorError4) {\n              throw _iteratorError4;\n            }\n          }\n        }\n\n        this.setState({\n          comments: prev_comments\n        });\n      } else {\n        var _data = new FirstLevelCommentDataStructure();\n\n        _data.user = this.props.user;\n        _data.comment = string;\n        _data.id = id;\n        _data.downvoteNum = 0;\n        _data.upvoteNum = 0;\n        _data.secondaryComments = [];\n\n        var _prev_comments = JSON.parse(JSON.stringify(this.state.comments));\n\n        _prev_comments.unshift(_data);\n\n        this.setState({\n          comments: _prev_comments\n        });\n      }\n    } // currently the comments only allow two-level structures\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this14 = this;\n\n      var blocks = null;\n\n      if (this.state.comments.length > 0) {\n        var user = this.props.user;\n        var current_question_id = this.props.question_id;\n        var is_for_road_map = this.props.is_for_road_map;\n        blocks = [];\n\n        for (var i = this.state.pageNumber * num_comments; i < num_comments; i += 1) {\n          if (i >= this.state.comments.length) {\n            continue;\n          }\n\n          blocks.push(_react.default.createElement(FirstLevelComment, {\n            key: 'FirstLevelComment' + this.state.comments[i].id,\n            comment_ref: this.state.comments[i],\n            updating_upvote: function updating_upvote(id, val) {\n              return _this14.updatingVote(id, val, true);\n            },\n            updating_downvote: function updating_downvote(id, val) {\n              return _this14.updatingVote(id, val, false);\n            },\n            updating_comment: function updating_comment(id, string, parent_id) {\n              return _this14.insertComment(id, string, parent_id);\n            },\n            current_user: user,\n            current_question_id: current_question_id\n          }));\n        }\n      }\n\n      return _react.default.createElement(\"section\", {\n        className: 'questionComments_content'\n      }, _react.default.createElement(\"h3\", null, \"Show/Leave Comments \", this.state.is_fold ? _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _index.faArrowRight,\n        onClick: function onClick() {\n          return _this14.setState({\n            is_fold: false\n          });\n        }\n      }) : _react.default.createElement(_reactFontawesome.FontAwesomeIcon, {\n        icon: _freeSolidSvgIcons.faArrowDown,\n        onClick: function onClick() {\n          return _this14.setState({\n            is_fold: true\n          });\n        }\n      })), this.state.is_fold ? null : _react.default.createElement(\"div\", null, _react.default.createElement(\"div\", null, _react.default.createElement(CommentEditor, {\n        for_road_map: this.props.is_for_road_map,\n        updating_comment: function updating_comment(id, string) {\n          return _this14.insertComment(id, string, null);\n        },\n        current_user: this.props.user,\n        current_question_id: this.props.question_id\n      })), _react.default.createElement(\"div\", null, blocks), _react.default.createElement(\"div\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        }\n      }, _react.default.createElement(\"div\", {\n        style: {\n          display: 'inline-block',\n          marginRight: '1em'\n        }\n      }, _react.default.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this14.navigatePage(true);\n        }\n      }, \"Next Page\")), _react.default.createElement(\"div\", {\n        style: {\n          display: 'inline-block'\n        }\n      }, _react.default.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this14.navigatePage(false);\n        }\n      }, \"Previous Page\")))));\n    }\n  }]);\n\n  return Comment;\n}(_react.Component);\n\nexports.Comment = Comment;\n\n//# sourceMappingURL=Comment.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tb2R1bGVzL2NvZGluZ19wYW5lbF9tb2R1bGVzL0NvbW1lbnQuanM/MjIwZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBLHFDQUFxQyxtQkFBTyxDQUFDLDRDQUFPOztBQUVwRCxvQ0FBb0MsbUJBQU8sQ0FBQyw0Q0FBTzs7QUFFbkQsd0JBQXdCLG1CQUFPLENBQUMsaUdBQWdDOztBQUVoRSx5QkFBeUIsbUJBQU8sQ0FBQyx1R0FBbUM7O0FBRXBFLGFBQWEsbUJBQU8sQ0FBQywwR0FBeUM7O0FBRTlELHlDQUF5QyxtQkFBTyxDQUFDLDREQUFhOztBQUU5RCxtQkFBTyxDQUFDLHVGQUFpQzs7QUFFekMsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGLHVDQUF1Qyw2QkFBNkIsWUFBWSxFQUFFLE9BQU8saUJBQWlCLG1CQUFtQix1QkFBdUIsc0RBQXNELHNIQUFzSCw0QkFBNEIsMENBQTBDLEVBQUUsT0FBTyx3QkFBd0IsRUFBRSxFQUFFLEVBQUUsRUFBRSxzQkFBc0IsZUFBZSxFQUFFOztBQUV0ZCx1QkFBdUIsMkVBQTJFLGtDQUFrQyxtQkFBbUIsR0FBRyxFQUFFLE9BQU8sa0NBQWtDLDhIQUE4SCxHQUFHLEVBQUUscUJBQXFCOztBQUU3ViwyQ0FBMkMsZ0JBQWdCLGtCQUFrQixPQUFPLDJCQUEyQix3REFBd0QsZ0NBQWdDLHVEQUF1RCwyREFBMkQsRUFBRTs7QUFFM1QsNkRBQTZELHNFQUFzRSw4REFBOEQsb0JBQW9COztBQUVyTixpREFBaUQsMEVBQTBFLGFBQWEsRUFBRSxxQ0FBcUM7O0FBRS9LLHVDQUF1Qyx1QkFBdUIsdUZBQXVGLEVBQUUsYUFBYTs7QUFFcEssNkJBQTZCLGdHQUFnRyxnREFBZ0QsR0FBRywyQkFBMkI7O0FBRTNNLDBDQUEwQywrREFBK0QsMkVBQTJFLEVBQUUseUVBQXlFLGVBQWUsc0RBQXNELEVBQUUsRUFBRSx1REFBdUQ7O0FBRS9YLGdDQUFnQyw0RUFBNEUsaUJBQWlCLFVBQVUsR0FBRyw4QkFBOEI7O0FBRXhLLGlEQUFpRCwwQ0FBMEMsMERBQTBELEVBQUU7O0FBRXZKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwrREFBK0Q7O0FBRS9EO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHOztBQUVIO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0ZBQXNGLGdFQUFnRTtBQUN0SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5RUFBeUUsbUVBQW1FO0FBQzVJOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0Esb0dBQW9HLG1FQUFtRTtBQUN2Szs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUVBQXlFLG1FQUFtRTtBQUM1STs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7O0FBRUwsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDBEQUEwRCxrQkFBa0I7QUFDNUU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLENBQUM7O0FBRUQ7O0FBRUEiLCJmaWxlIjoiLi9tb2R1bGVzL2NvZGluZ19wYW5lbF9tb2R1bGVzL0NvbW1lbnQuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQ29tbWVudCA9IGV4cG9ydHMuRG93bnZvdGVEaXNwbGF5ID0gZXhwb3J0cy5VcHZvdGVEaXNwbGF5ID0gdm9pZCAwO1xuXG52YXIgX3JlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTtcblxudmFyIF9heGlvcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImF4aW9zXCIpKTtcblxudmFyIF9yZWFjdEZvbnRhd2Vzb21lID0gcmVxdWlyZShcIkBmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZVwiKTtcblxudmFyIF9mcmVlU29saWRTdmdJY29ucyA9IHJlcXVpcmUoXCJAZm9ydGF3ZXNvbWUvZnJlZS1zb2xpZC1zdmctaWNvbnNcIik7XG5cbnZhciBfaW5kZXggPSByZXF1aXJlKFwiQGZvcnRhd2Vzb21lL2ZyZWUtc29saWQtc3ZnLWljb25zL2luZGV4XCIpO1xuXG52YXIgX3JlYWN0UXVpbGwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdC1xdWlsbFwiKSk7XG5cbnJlcXVpcmUoXCJyZWFjdC1xdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzXCIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHsgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGVsc2UgeyB2YXIgbmV3T2JqID0ge307IGlmIChvYmogIT0gbnVsbCkgeyBmb3IgKHZhciBrZXkgaW4gb2JqKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9OyBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG5ld09iaiwga2V5LCBkZXNjKTsgfSBlbHNlIHsgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikgeyBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH07IH0gZWxzZSB7IF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZihvYmopOyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH1cblxuZnVuY3Rpb24gX2NyZWF0ZUNsYXNzKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoY2FsbCAmJiAoX3R5cGVvZihjYWxsKSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSkgeyByZXR1cm4gY2FsbDsgfSByZXR1cm4gX2Fzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTsgfVxuXG5mdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHsgaWYgKHNlbGYgPT09IHZvaWQgMCkgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIHNlbGY7IH1cblxuZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHsgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTsgfTsgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgX3NldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTsgfVxuXG5mdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkgeyBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHsgby5fX3Byb3RvX18gPSBwOyByZXR1cm4gbzsgfTsgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgcG9zdF9jb21tZW50c191cmwgPSAnL3Bvc3RfY29tbWVudHMnO1xudmFyIGdldF9jb21tZW50c191cmwgPSAnL2dldF9jb21tZW50cyc7XG52YXIgdXBkYXRlX2NvbW1lbnRzX3VybCA9ICcvdXBkYXRlX2NvbW1lbnRzJztcbnZhciBudW1fY29tbWVudHMgPSAxMDtcbi8qXG4qIEV4cGVjdGVkIGRhdGEgaW5mbzpcbiogICBjb21tZW50IGlkXG4qICAgdXNlclxuKiAgIGNvbW1lbnRzXG4qICAgdXB2b3Rlc1xuKiAgIGRvd252b3Rlc1xuKiAgIHNlY29uZGFyeVxuKiAqL1xuLy8gZXhwZWN0cyBpbWFnZSBhbmQgbmFtZVxuXG52YXIgRmlyc3RMZXZlbENvbW1lbnREYXRhU3RydWN0dXJlID0gZnVuY3Rpb24gRmlyc3RMZXZlbENvbW1lbnREYXRhU3RydWN0dXJlKCkge1xuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRmlyc3RMZXZlbENvbW1lbnREYXRhU3RydWN0dXJlKTtcblxuICB0aGlzLmlkID0gMDtcbiAgdGhpcy5pbWFnZVNvdXJjZSA9ICcnO1xuICB0aGlzLnVzZXIgPSAnJztcbiAgdGhpcy5jb21tZW50ID0gJyc7XG4gIHRoaXMudXB2b3RlTnVtID0gMDtcbiAgdGhpcy5kb3dudm90ZU51bSA9IDA7XG4gIHRoaXMuc2Vjb25kYXJ5Q29tbWVudHMgPSBbXTtcbn07XG5cbnZhciBTZWNvbmRMZXZlbENvbW1lbnREYXRhU3RydWN0dXJlID0gZnVuY3Rpb24gU2Vjb25kTGV2ZWxDb21tZW50RGF0YVN0cnVjdHVyZSgpIHtcbiAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlY29uZExldmVsQ29tbWVudERhdGFTdHJ1Y3R1cmUpO1xuXG4gIHRoaXMuaWQgPSAwO1xuICB0aGlzLmltYWdlU291cmNlID0gJyc7XG4gIHRoaXMudXNlciA9ICcnO1xuICB0aGlzLmNvbW1lbnQgPSAnJztcbiAgdGhpcy51cHZvdGVOdW0gPSAwO1xuICB0aGlzLmRvd252b3RlTnVtID0gMDtcbn07XG5cbnZhciBVcHZvdGVEaXNwbGF5ID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhVcHZvdGVEaXNwbGF5LCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBVcHZvdGVEaXNwbGF5KHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVwdm90ZURpc3BsYXkpO1xuXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoVXB2b3RlRGlzcGxheSkuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgY2xpY2tlZDogZmFsc2VcbiAgICB9O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhVcHZvdGVEaXNwbGF5LCBbe1xuICAgIGtleTogXCJyZWd1bGF0ZU51bVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWd1bGF0ZU51bSgpIHtcbiAgICAgIHZhciBwcmV2X3ZhbHVlID0gdGhpcy5wcm9wcy5udW07XG4gICAgICBjb25zb2xlLmxvZyhwcmV2X3ZhbHVlKTtcblxuICAgICAgaWYgKHRoaXMuc3RhdGUuY2xpY2tlZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY2xpY2tlZDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGluZ191cHZvdGUocHJldl92YWx1ZSArIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY2xpY2tlZDogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJvcHMudXBkYXRpbmdfdXB2b3RlKHByZXZfdmFsdWUgLSAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdEZvbnRhd2Vzb21lLkZvbnRBd2Vzb21lSWNvbiwge1xuICAgICAgICBpY29uOiBfZnJlZVNvbGlkU3ZnSWNvbnMuZmFBcnJvd1VwLFxuICAgICAgICBjbGFzc05hbWU6ICdVcHZvdGVJY29uJyxcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnJlZ3VsYXRlTnVtKCk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgbWFyZ2luTGVmdDogJzAuNWVtJ1xuICAgICAgICB9XG4gICAgICB9LCB0aGlzLnByb3BzLm51bSkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBVcHZvdGVEaXNwbGF5O1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0cy5VcHZvdGVEaXNwbGF5ID0gVXB2b3RlRGlzcGxheTtcblxudmFyIERvd252b3RlRGlzcGxheSA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudDIpIHtcbiAgX2luaGVyaXRzKERvd252b3RlRGlzcGxheSwgX0NvbXBvbmVudDIpO1xuXG4gIGZ1bmN0aW9uIERvd252b3RlRGlzcGxheShwcm9wcykge1xuICAgIHZhciBfdGhpczM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRG93bnZvdGVEaXNwbGF5KTtcblxuICAgIF90aGlzMyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihEb3dudm90ZURpc3BsYXkpLmNhbGwodGhpcywgcHJvcHMpKTtcbiAgICBfdGhpczMuc3RhdGUgPSB7XG4gICAgICBjbGlja2VkOiBmYWxzZVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzMztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhEb3dudm90ZURpc3BsYXksIFt7XG4gICAga2V5OiBcInJlZ3VsYXRlTnVtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ3VsYXRlTnVtKCkge1xuICAgICAgdmFyIHByZXZfdmFsdWUgPSB0aGlzLnByb3BzLm51bTtcblxuICAgICAgaWYgKHRoaXMuc3RhdGUuY2xpY2tlZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY2xpY2tlZDogdHJ1ZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGluZ19kb3dudm90ZShwcmV2X3ZhbHVlIC0gMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBjbGlja2VkOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5wcm9wcy51cGRhdGluZ19kb3dudm90ZShwcmV2X3ZhbHVlICsgMSk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RGb250YXdlc29tZS5Gb250QXdlc29tZUljb24sIHtcbiAgICAgICAgaWNvbjogX2ZyZWVTb2xpZFN2Z0ljb25zLmZhQXJyb3dEb3duLFxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczQucmVndWxhdGVOdW0oKTtcbiAgICAgICAgfVxuICAgICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHtcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBtYXJnaW5MZWZ0OiAnMC41ZW0nXG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMucHJvcHMubnVtKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIERvd252b3RlRGlzcGxheTtcbn0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbmV4cG9ydHMuRG93bnZvdGVEaXNwbGF5ID0gRG93bnZvdGVEaXNwbGF5O1xuXG52YXIgVXNlckluZm8gPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQzKSB7XG4gIF9pbmhlcml0cyhVc2VySW5mbywgX0NvbXBvbmVudDMpO1xuXG4gIGZ1bmN0aW9uIFVzZXJJbmZvKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVc2VySW5mbyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKFVzZXJJbmZvKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhVc2VySW5mbywgW3tcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdydcbiAgICAgICAgfVxuICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImltZ1wiLCB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgb3JkZXI6IDEsXG4gICAgICAgICAgbWFyZ2luUmlnaHQ6ICcxZW0nLFxuICAgICAgICAgIG1heFdpZHRoOiAnNWVtJyxcbiAgICAgICAgICBtYXhIZWlnaHQ6ICc1ZW0nLFxuICAgICAgICAgIHZlcnRpY2FsQWxpZ246ICdtaWRkbGUnLFxuICAgICAgICAgIGJveFNoYWRvdzogJzAgMCAwLjJlbSBncmV5J1xuICAgICAgICB9LFxuICAgICAgICBzcmM6IHRoaXMucHJvcHMuc3JjLFxuICAgICAgICBhbHQ6IHRoaXMucHJvcHMudXNlclxuICAgICAgfSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJoNFwiLCB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgb3JkZXI6IDIsXG4gICAgICAgICAgdmVydGljYWxBbGlnbjogJ2NlbnRlcidcbiAgICAgICAgfVxuICAgICAgfSwgdGhpcy5wcm9wcy51c2VyKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFVzZXJJbmZvO1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxudmFyIFNlY29uZExldmVsQ29tbWVudCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudDQpIHtcbiAgX2luaGVyaXRzKFNlY29uZExldmVsQ29tbWVudCwgX0NvbXBvbmVudDQpO1xuXG4gIGZ1bmN0aW9uIFNlY29uZExldmVsQ29tbWVudCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2Vjb25kTGV2ZWxDb21tZW50KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoU2Vjb25kTGV2ZWxDb21tZW50KS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTZWNvbmRMZXZlbENvbW1lbnQsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgICAgdmFyIGN1cnJfY29tbWVudCA9IHRoaXMucHJvcHMuY29tbWVudF9yZWY7XG4gICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogJ1NlY29uZExldmVsQ29tbWVudF9jb250ZW50J1xuICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImg0XCIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIGN1cnJfY29tbWVudC51c2VyKSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6ICdjb21tZW50X2ZsZXgnXG4gICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiAnY29tbWVudF9ibG9ja2xlZnQnXG4gICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFVwdm90ZURpc3BsYXksIHtcbiAgICAgICAgbnVtOiBjdXJyX2NvbW1lbnQudXB2b3RlTnVtLFxuICAgICAgICB1cGRhdGluZ191cHZvdGU6IGZ1bmN0aW9uIHVwZGF0aW5nX3Vwdm90ZSh2YWwpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM1LnByb3BzLnVwZGF0aW5nX3Vwdm90ZShjdXJyX2NvbW1lbnQuaWQsIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KERvd252b3RlRGlzcGxheSwge1xuICAgICAgICBudW06IGN1cnJfY29tbWVudC5kb3dudm90ZU51bSxcbiAgICAgICAgdXBkYXRpbmdfZG93bnZvdGU6IGZ1bmN0aW9uIHVwZGF0aW5nX2Rvd252b3RlKHZhbCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczUucHJvcHMudXBkYXRpbmdfZG93bnZvdGUoY3Vycl9jb21tZW50LmlkLCB2YWwpO1xuICAgICAgICB9XG4gICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6ICdjb21tZW50X2Jsb2NrcmlnaHQnXG4gICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic2VjdGlvblwiLCB7XG4gICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICAgICAgX19odG1sOiBjdXJyX2NvbW1lbnQuY29tbWVudFxuICAgICAgICB9XG4gICAgICB9KSkpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU2Vjb25kTGV2ZWxDb21tZW50O1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxudmFyIENvbW1lbnRFZGl0b3IgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQ1KSB7XG4gIF9pbmhlcml0cyhDb21tZW50RWRpdG9yLCBfQ29tcG9uZW50NSk7XG5cbiAgZnVuY3Rpb24gQ29tbWVudEVkaXRvcihwcm9wcykge1xuICAgIHZhciBfdGhpczY7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29tbWVudEVkaXRvcik7XG5cbiAgICBfdGhpczYgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoQ29tbWVudEVkaXRvcikuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIF90aGlzNi5zdGF0ZSA9IHtcbiAgICAgIHRleHQ6ICcnXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM2O1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENvbW1lbnRFZGl0b3IsIFt7XG4gICAga2V5OiBcInVwZGF0ZUNvbW1lbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlQ29tbWVudCgpIHtcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgICB2YXIgY3VycmVudF91c2VyID0gdGhpcy5wcm9wcy5jdXJyZW50X3VzZXI7XG4gICAgICB2YXIgY3VycmVudF9xdWVzdGlvbl9pZCA9IHRoaXMucHJvcHMuY3VycmVudF9xdWVzdGlvbl9pZDsgLy8gdGhpcyB2YXJpYWJsZSBjYW4gYmUgbnVsbC91bmRlZmluZWQhXG5cbiAgICAgIHZhciBjdXJyZW50X3BhcmVudF9pZCA9IHRoaXMucHJvcHMuY3VycmVudF9wYXJlbnRfY29tbWVudF9pZCA9PSBudWxsID8gLTEgOiB0aGlzLnByb3BzLmN1cnJlbnRfcGFyZW50X2NvbW1lbnRfaWQ7XG4gICAgICB2YXIgaXNfZm9yX3JvYWRfbWFwID0gdGhpcy5wcm9wcy5mb3Jfcm9hZF9tYXAgPT09IHRydWUgPyAxIDogMDtcblxuICAgICAgX2F4aW9zLmRlZmF1bHQucG9zdChwb3N0X2NvbW1lbnRzX3VybCwge1xuICAgICAgICB1c2VybmFtZTogY3VycmVudF91c2VyLFxuICAgICAgICBxdWVzdGlvbl9pZDogY3VycmVudF9xdWVzdGlvbl9pZCxcbiAgICAgICAgcGFyZW50X2NvbW1lbnRfaWQ6IGN1cnJlbnRfcGFyZW50X2lkLFxuICAgICAgICBpc19mb3Jfcm9hZF9tYXA6IGlzX2Zvcl9yb2FkX21hcCxcbiAgICAgICAgY29udGVudDogdGhpcy5zdGF0ZS50ZXh0XG4gICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICBjb25zb2xlLmxvZygnU2VuZCBjb21tZW50IHRvIGJhY2tlbmQnLCByZXNwb25zZS5kYXRhKTtcbiAgICAgICAgdmFyIGlkID0gcmVzcG9uc2UuZGF0YTtcblxuICAgICAgICBfdGhpczcucHJvcHMudXBkYXRpbmdfY29tbWVudChpZCwgX3RoaXM3LnN0YXRlLnRleHQpO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXM4ID0gdGhpcztcblxuICAgICAgcmV0dXJuIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdFF1aWxsLmRlZmF1bHQsIHtcbiAgICAgICAgdGhlbWU6IFwic25vd1wiLFxuICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS50ZXh0LFxuICAgICAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXM4LnNldFN0YXRlKHtcbiAgICAgICAgICAgIHRleHQ6IHZhbHVlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzOC51cGRhdGVDb21tZW50KCk7XG4gICAgICAgIH1cbiAgICAgIH0sIFwiU3VibWl0XCIpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29tbWVudEVkaXRvcjtcbn0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbnZhciBGaXJzdExldmVsQ29tbWVudCA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoX0NvbXBvbmVudDYpIHtcbiAgX2luaGVyaXRzKEZpcnN0TGV2ZWxDb21tZW50LCBfQ29tcG9uZW50Nik7XG5cbiAgZnVuY3Rpb24gRmlyc3RMZXZlbENvbW1lbnQocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM5O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEZpcnN0TGV2ZWxDb21tZW50KTtcblxuICAgIF90aGlzOSA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihGaXJzdExldmVsQ29tbWVudCkuY2FsbCh0aGlzLCBwcm9wcykpO1xuICAgIF90aGlzOS5zdGF0ZSA9IHtcbiAgICAgIGlzX2ZvbGQ6IHRydWVcbiAgICB9O1xuICAgIHJldHVybiBfdGhpczk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoRmlyc3RMZXZlbENvbW1lbnQsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7XG5cbiAgICAgIHZhciBjdXJyX2NvbW1lbnQgPSB0aGlzLnByb3BzLmNvbW1lbnRfcmVmO1xuICAgICAgdmFyIHNlY29uZGFyeV9jb21tZW50cyA9IFtdO1xuICAgICAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICAgICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGN1cnJfY29tbWVudC5zZWNvbmRhcnlDb21tZW50c1tTeW1ib2wuaXRlcmF0b3JdKCksIF9zdGVwOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSAoX3N0ZXAgPSBfaXRlcmF0b3IubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWUpIHtcbiAgICAgICAgICB2YXIgc2Vjb25kX2xldmVsX2NvbW1lbnQgPSBfc3RlcC52YWx1ZTtcbiAgICAgICAgICBzZWNvbmRhcnlfY29tbWVudHMucHVzaChfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFNlY29uZExldmVsQ29tbWVudCwge1xuICAgICAgICAgICAga2V5OiAnU2Vjb25kTGV2ZWxDb21tZW50JyArIHNlY29uZF9sZXZlbF9jb21tZW50LmlkLFxuICAgICAgICAgICAgY29tbWVudF9yZWY6IHNlY29uZF9sZXZlbF9jb21tZW50LFxuICAgICAgICAgICAgdXBkYXRpbmdfdXB2b3RlOiBmdW5jdGlvbiB1cGRhdGluZ191cHZvdGUoaWQsIHZhbCkge1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxMC5wcm9wcy51cGRhdGluZ191cHZvdGUoaWQsIHZhbCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdXBkYXRpbmdfZG93bnZvdGU6IGZ1bmN0aW9uIHVwZGF0aW5nX2Rvd252b3RlKGlkLCB2YWwpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMTAucHJvcHMudXBkYXRpbmdfZG93bnZvdGUoaWQsIHZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgX2l0ZXJhdG9yLnJldHVybigpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3IpIHtcbiAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2ZpcnN0TGV2ZWxDb21tZW50c19jb250ZW50J1xuICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoVXNlckluZm8sIHtcbiAgICAgICAgc3JjOiBjdXJyX2NvbW1lbnQuaW1hZ2VTb3VyY2UsXG4gICAgICAgIHVzZXI6IGN1cnJfY29tbWVudC51c2VyXG4gICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6ICdjb21tZW50X2ZsZXgnXG4gICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiAnY29tbWVudF9ibG9ja2xlZnQnXG4gICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoVXB2b3RlRGlzcGxheSwge1xuICAgICAgICBudW06IGN1cnJfY29tbWVudC51cHZvdGVOdW0sXG4gICAgICAgIHVwZGF0aW5nX3Vwdm90ZTogZnVuY3Rpb24gdXBkYXRpbmdfdXB2b3RlKHZhbCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczEwLnByb3BzLnVwZGF0aW5nX3Vwdm90ZShjdXJyX2NvbW1lbnQuaWQsIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KERvd252b3RlRGlzcGxheSwge1xuICAgICAgICBudW06IGN1cnJfY29tbWVudC5kb3dudm90ZU51bSxcbiAgICAgICAgdXBkYXRpbmdfZG93bnZvdGU6IGZ1bmN0aW9uIHVwZGF0aW5nX2Rvd252b3RlKHZhbCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczEwLnByb3BzLnVwZGF0aW5nX2Rvd252b3RlKGN1cnJfY29tbWVudC5pZCwgdmFsKTtcbiAgICAgICAgfVxuICAgICAgfSkpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogJ2NvbW1lbnRfYmxvY2tyaWdodCdcbiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzZWN0aW9uXCIsIHtcbiAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgICBfX2h0bWw6IGN1cnJfY29tbWVudC5jb21tZW50XG4gICAgICAgIH1cbiAgICAgIH0pKSkpLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIHNlY29uZGFyeV9jb21tZW50cyksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImg1XCIsIG51bGwsIFwiV3JpdGUgZm9sbG93dXBzIFwiLCB0aGlzLnN0YXRlLmlzX2ZvbGQgPyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdEZvbnRhd2Vzb21lLkZvbnRBd2Vzb21lSWNvbiwge1xuICAgICAgICBpY29uOiBfaW5kZXguZmFBcnJvd1JpZ2h0LFxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczEwLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGlzX2ZvbGQ6IGZhbHNlXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pIDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3RGb250YXdlc29tZS5Gb250QXdlc29tZUljb24sIHtcbiAgICAgICAgaWNvbjogX2ZyZWVTb2xpZFN2Z0ljb25zLmZhQXJyb3dEb3duLFxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczEwLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGlzX2ZvbGQ6IHRydWVcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSkpLCB0aGlzLnN0YXRlLmlzX2ZvbGQgPyBudWxsIDogX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENvbW1lbnRFZGl0b3IsIHtcbiAgICAgICAgdXBkYXRpbmdfY29tbWVudDogZnVuY3Rpb24gdXBkYXRpbmdfY29tbWVudChpZCwgc3RyaW5nKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMTAucHJvcHMudXBkYXRpbmdfY29tbWVudChpZCwgc3RyaW5nLCBjdXJyX2NvbW1lbnQuaWQpO1xuICAgICAgICB9LFxuICAgICAgICBjdXJyZW50X3VzZXI6IHRoaXMucHJvcHMuY3VycmVudF91c2VyLFxuICAgICAgICBjdXJyZW50X3F1ZXN0aW9uX2lkOiB0aGlzLnByb3BzLmN1cnJlbnRfcXVlc3Rpb25faWQsXG4gICAgICAgIGN1cnJlbnRfcGFyZW50X2NvbW1lbnRfaWQ6IGN1cnJfY29tbWVudC5pZFxuICAgICAgfSkpKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEZpcnN0TGV2ZWxDb21tZW50O1xufShfcmVhY3QuQ29tcG9uZW50KTtcblxudmFyIENvbW1lbnQgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKF9Db21wb25lbnQ3KSB7XG4gIF9pbmhlcml0cyhDb21tZW50LCBfQ29tcG9uZW50Nyk7XG5cbiAgZnVuY3Rpb24gQ29tbWVudChwcm9wcykge1xuICAgIHZhciBfdGhpczExO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbW1lbnQpO1xuXG4gICAgX3RoaXMxMSA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihDb21tZW50KS5jYWxsKHRoaXMsIHByb3BzKSk7XG4gICAgX3RoaXMxMS5zdGF0ZSA9IHtcbiAgICAgIGNvbW1lbnRzOiBbXSxcbiAgICAgIHBhZ2VOdW1iZXI6IDAsXG4gICAgICBpc19mb2xkOiB0cnVlXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXMxMTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDb21tZW50LCBbe1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIHZhciBfdGhpczEyID0gdGhpcztcblxuICAgICAgdmFyIGlzX2Zvcl9yb2FkX21hcCA9IHRoaXMucHJvcHMuZm9yX3JvYWRfbWFwID09PSB0cnVlID8gMSA6IDA7XG5cbiAgICAgIF9heGlvcy5kZWZhdWx0LmdldChnZXRfY29tbWVudHNfdXJsLCB7XG4gICAgICAgIHBhcmFtczoge1xuICAgICAgICAgIGlzX2Zvcl9yb2FkX21hcDogaXNfZm9yX3JvYWRfbWFwLFxuICAgICAgICAgIHF1ZXN0aW9uX2lkOiB0aGlzLnByb3BzLnF1ZXN0aW9uX2lkXG4gICAgICAgIH1cbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdHZXQgYWxsIGNvbW1lbnRzOicsIHJlc3BvbnNlLmRhdGEsIE9iamVjdC5rZXlzKHJlc3BvbnNlLmRhdGEpLmxlbmd0aCk7XG5cbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHJlc3BvbnNlLmRhdGEpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBfdGhpczEyLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGNvbW1lbnRzOiByZXNwb25zZS5kYXRhXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ1cGRhdGluZ1ZvdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRpbmdWb3RlKGlkLCB2YWwsIGlzX3Vwdm90ZSkge1xuICAgICAgdmFyIF90aGlzMTMgPSB0aGlzO1xuXG4gICAgICBfYXhpb3MuZGVmYXVsdC5wb3N0KHVwZGF0ZV9jb21tZW50c191cmwsIHtcbiAgICAgICAgdXNlcm5hbWU6IHRoaXMucHJvcHMudXNlcixcbiAgICAgICAgY29tbWVudF9pZDogaWQsXG4gICAgICAgIHZhbHVlOiB2YWwsXG4gICAgICAgIGlzX3Vwdm90ZTogaXNfdXB2b3RlID09PSB0cnVlID8gMSA6IDBcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIHZhciBwcmV2X2NvbW1lbnRzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShfdGhpczEzLnN0YXRlLmNvbW1lbnRzKSk7XG4gICAgICAgIHZhciBmb3VuZCA9IDA7XG4gICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiA9IHRydWU7XG4gICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjIgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yMiA9IHVuZGVmaW5lZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjIgPSBwcmV2X2NvbW1lbnRzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAyOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24yID0gKF9zdGVwMiA9IF9pdGVyYXRvcjIubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjIgPSB0cnVlKSB7XG4gICAgICAgICAgICB2YXIgZmlyc3RfbGV2X3F1ZXN0aW9uID0gX3N0ZXAyLnZhbHVlO1xuXG4gICAgICAgICAgICBpZiAoZmlyc3RfbGV2X3F1ZXN0aW9uLmlkID09PSBpZCkge1xuICAgICAgICAgICAgICBpZiAoaXNfdXB2b3RlKSB7XG4gICAgICAgICAgICAgICAgZmlyc3RfbGV2X3F1ZXN0aW9uLnVwdm90ZU51bSA9IHZhbDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBmaXJzdF9sZXZfcXVlc3Rpb24uZG93bnZvdGVOdW0gPSB2YWw7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBmb3VuZCA9IDE7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZm91bmQgPT09IDEpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMyA9IHRydWU7XG4gICAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IzID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgX2l0ZXJhdG9yRXJyb3IzID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICBmb3IgKHZhciBfaXRlcmF0b3IzID0gZmlyc3RfbGV2X3F1ZXN0aW9uLnNlY29uZGFyeUNvbW1lbnRzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXAzOyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24zID0gKF9zdGVwMyA9IF9pdGVyYXRvcjMubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgPSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdmFyIHNlY29uZF9sZXZfcXVlc3Rpb24gPSBfc3RlcDMudmFsdWU7XG5cbiAgICAgICAgICAgICAgICBpZiAoc2Vjb25kX2xldl9xdWVzdGlvbi5pZCA9PT0gaWQpIHtcbiAgICAgICAgICAgICAgICAgIGlmIChpc191cHZvdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2Vjb25kX2xldl9xdWVzdGlvbi51cHZvdGVOdW0gPSB2YWw7XG4gICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzZWNvbmRfbGV2X3F1ZXN0aW9uLmRvd252b3RlTnVtID0gdmFsO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBmb3VuZCA9IDE7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjMgPSB0cnVlO1xuICAgICAgICAgICAgICBfaXRlcmF0b3JFcnJvcjMgPSBlcnI7XG4gICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjMgJiYgX2l0ZXJhdG9yMy5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yMy5yZXR1cm4oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yMykge1xuICAgICAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoZm91bmQgPT09IDEpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICBfZGlkSXRlcmF0b3JFcnJvcjIgPSB0cnVlO1xuICAgICAgICAgIF9pdGVyYXRvckVycm9yMiA9IGVycjtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uMiAmJiBfaXRlcmF0b3IyLnJldHVybiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgIF9pdGVyYXRvcjIucmV0dXJuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcjIpIHtcbiAgICAgICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3IyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIF90aGlzMTMuc2V0U3RhdGUoe1xuICAgICAgICAgIGNvbW1lbnRzOiBwcmV2X2NvbW1lbnRzXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm5hdmlnYXRlUGFnZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBuYXZpZ2F0ZVBhZ2UoaXNfbmV4dHBhZ2UpIHtcbiAgICAgIHZhciBwcmV2X3BhZ2VOdW1iZXIgPSB0aGlzLnN0YXRlLnBhZ2VOdW1iZXI7XG5cbiAgICAgIGlmIChpc19uZXh0cGFnZSkge1xuICAgICAgICBpZiAoKHByZXZfcGFnZU51bWJlciArIDEpICogbnVtX2NvbW1lbnRzIC0gdGhpcy5zdGF0ZS5jb21tZW50cy5sZW5ndGggPCBudW1fY29tbWVudHMpIHtcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHBhZ2VOdW1iZXI6IHByZXZfcGFnZU51bWJlciArIDFcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHByZXZfcGFnZU51bWJlciAtIDEgPiAwKSB7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICBwYWdlTnVtYmVyOiBwcmV2X3BhZ2VOdW1iZXIgLSAxXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaW5zZXJ0Q29tbWVudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbnNlcnRDb21tZW50KGlkLCBzdHJpbmcsIHBhcmVudF9pZCkge1xuICAgICAgaWYgKHBhcmVudF9pZCAhPT0gbnVsbCAmJiBwYXJlbnRfaWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB2YXIgZGF0YSA9IG5ldyBTZWNvbmRMZXZlbENvbW1lbnREYXRhU3RydWN0dXJlKCk7XG4gICAgICAgIGRhdGEudXNlciA9IHRoaXMucHJvcHMudXNlcjtcbiAgICAgICAgZGF0YS5jb21tZW50ID0gc3RyaW5nO1xuICAgICAgICBkYXRhLmRvd252b3RlTnVtID0gMDtcbiAgICAgICAgZGF0YS51cHZvdGVOdW0gPSAwO1xuICAgICAgICBkYXRhLmlkID0gaWQ7XG4gICAgICAgIHZhciBwcmV2X2NvbW1lbnRzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmNvbW1lbnRzKSk7XG4gICAgICAgIHZhciBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uNCA9IHRydWU7XG4gICAgICAgIHZhciBfZGlkSXRlcmF0b3JFcnJvcjQgPSBmYWxzZTtcbiAgICAgICAgdmFyIF9pdGVyYXRvckVycm9yNCA9IHVuZGVmaW5lZDtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgIGZvciAodmFyIF9pdGVyYXRvcjQgPSBwcmV2X2NvbW1lbnRzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA0OyAhKF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb240ID0gKF9zdGVwNCA9IF9pdGVyYXRvcjQubmV4dCgpKS5kb25lKTsgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjQgPSB0cnVlKSB7XG4gICAgICAgICAgICB2YXIgZmlyc3RfbGV2X3F1ZXN0aW9uID0gX3N0ZXA0LnZhbHVlO1xuXG4gICAgICAgICAgICBpZiAoZmlyc3RfbGV2X3F1ZXN0aW9uLmlkID09PSBwYXJlbnRfaWQpIHtcbiAgICAgICAgICAgICAgZmlyc3RfbGV2X3F1ZXN0aW9uLnNlY29uZGFyeUNvbW1lbnRzLnVuc2hpZnQoZGF0YSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3I0ID0gdHJ1ZTtcbiAgICAgICAgICBfaXRlcmF0b3JFcnJvcjQgPSBlcnI7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbjQgJiYgX2l0ZXJhdG9yNC5yZXR1cm4gIT0gbnVsbCkge1xuICAgICAgICAgICAgICBfaXRlcmF0b3I0LnJldHVybigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICBpZiAoX2RpZEl0ZXJhdG9yRXJyb3I0KSB7XG4gICAgICAgICAgICAgIHRocm93IF9pdGVyYXRvckVycm9yNDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICBjb21tZW50czogcHJldl9jb21tZW50c1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfZGF0YSA9IG5ldyBGaXJzdExldmVsQ29tbWVudERhdGFTdHJ1Y3R1cmUoKTtcblxuICAgICAgICBfZGF0YS51c2VyID0gdGhpcy5wcm9wcy51c2VyO1xuICAgICAgICBfZGF0YS5jb21tZW50ID0gc3RyaW5nO1xuICAgICAgICBfZGF0YS5pZCA9IGlkO1xuICAgICAgICBfZGF0YS5kb3dudm90ZU51bSA9IDA7XG4gICAgICAgIF9kYXRhLnVwdm90ZU51bSA9IDA7XG4gICAgICAgIF9kYXRhLnNlY29uZGFyeUNvbW1lbnRzID0gW107XG5cbiAgICAgICAgdmFyIF9wcmV2X2NvbW1lbnRzID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0aGlzLnN0YXRlLmNvbW1lbnRzKSk7XG5cbiAgICAgICAgX3ByZXZfY29tbWVudHMudW5zaGlmdChfZGF0YSk7XG5cbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY29tbWVudHM6IF9wcmV2X2NvbW1lbnRzXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gLy8gY3VycmVudGx5IHRoZSBjb21tZW50cyBvbmx5IGFsbG93IHR3by1sZXZlbCBzdHJ1Y3R1cmVzXG5cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMTQgPSB0aGlzO1xuXG4gICAgICB2YXIgYmxvY2tzID0gbnVsbDtcblxuICAgICAgaWYgKHRoaXMuc3RhdGUuY29tbWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgdXNlciA9IHRoaXMucHJvcHMudXNlcjtcbiAgICAgICAgdmFyIGN1cnJlbnRfcXVlc3Rpb25faWQgPSB0aGlzLnByb3BzLnF1ZXN0aW9uX2lkO1xuICAgICAgICB2YXIgaXNfZm9yX3JvYWRfbWFwID0gdGhpcy5wcm9wcy5pc19mb3Jfcm9hZF9tYXA7XG4gICAgICAgIGJsb2NrcyA9IFtdO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSB0aGlzLnN0YXRlLnBhZ2VOdW1iZXIgKiBudW1fY29tbWVudHM7IGkgPCBudW1fY29tbWVudHM7IGkgKz0gMSkge1xuICAgICAgICAgIGlmIChpID49IHRoaXMuc3RhdGUuY29tbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBibG9ja3MucHVzaChfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KEZpcnN0TGV2ZWxDb21tZW50LCB7XG4gICAgICAgICAgICBrZXk6ICdGaXJzdExldmVsQ29tbWVudCcgKyB0aGlzLnN0YXRlLmNvbW1lbnRzW2ldLmlkLFxuICAgICAgICAgICAgY29tbWVudF9yZWY6IHRoaXMuc3RhdGUuY29tbWVudHNbaV0sXG4gICAgICAgICAgICB1cGRhdGluZ191cHZvdGU6IGZ1bmN0aW9uIHVwZGF0aW5nX3Vwdm90ZShpZCwgdmFsKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczE0LnVwZGF0aW5nVm90ZShpZCwgdmFsLCB0cnVlKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1cGRhdGluZ19kb3dudm90ZTogZnVuY3Rpb24gdXBkYXRpbmdfZG93bnZvdGUoaWQsIHZhbCkge1xuICAgICAgICAgICAgICByZXR1cm4gX3RoaXMxNC51cGRhdGluZ1ZvdGUoaWQsIHZhbCwgZmFsc2UpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVwZGF0aW5nX2NvbW1lbnQ6IGZ1bmN0aW9uIHVwZGF0aW5nX2NvbW1lbnQoaWQsIHN0cmluZywgcGFyZW50X2lkKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczE0Lmluc2VydENvbW1lbnQoaWQsIHN0cmluZywgcGFyZW50X2lkKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjdXJyZW50X3VzZXI6IHVzZXIsXG4gICAgICAgICAgICBjdXJyZW50X3F1ZXN0aW9uX2lkOiBjdXJyZW50X3F1ZXN0aW9uX2lkXG4gICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwic2VjdGlvblwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3F1ZXN0aW9uQ29tbWVudHNfY29udGVudCdcbiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJoM1wiLCBudWxsLCBcIlNob3cvTGVhdmUgQ29tbWVudHMgXCIsIHRoaXMuc3RhdGUuaXNfZm9sZCA/IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0Rm9udGF3ZXNvbWUuRm9udEF3ZXNvbWVJY29uLCB7XG4gICAgICAgIGljb246IF9pbmRleC5mYUFycm93UmlnaHQsXG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMTQuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaXNfZm9sZDogZmFsc2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSkgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9yZWFjdEZvbnRhd2Vzb21lLkZvbnRBd2Vzb21lSWNvbiwge1xuICAgICAgICBpY29uOiBfZnJlZVNvbGlkU3ZnSWNvbnMuZmFBcnJvd0Rvd24sXG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMTQuc2V0U3RhdGUoe1xuICAgICAgICAgICAgaXNfZm9sZDogdHJ1ZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KSksIHRoaXMuc3RhdGUuaXNfZm9sZCA/IG51bGwgOiBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChDb21tZW50RWRpdG9yLCB7XG4gICAgICAgIGZvcl9yb2FkX21hcDogdGhpcy5wcm9wcy5pc19mb3Jfcm9hZF9tYXAsXG4gICAgICAgIHVwZGF0aW5nX2NvbW1lbnQ6IGZ1bmN0aW9uIHVwZGF0aW5nX2NvbW1lbnQoaWQsIHN0cmluZykge1xuICAgICAgICAgIHJldHVybiBfdGhpczE0Lmluc2VydENvbW1lbnQoaWQsIHN0cmluZywgbnVsbCk7XG4gICAgICAgIH0sXG4gICAgICAgIGN1cnJlbnRfdXNlcjogdGhpcy5wcm9wcy51c2VyLFxuICAgICAgICBjdXJyZW50X3F1ZXN0aW9uX2lkOiB0aGlzLnByb3BzLnF1ZXN0aW9uX2lkXG4gICAgICB9KSksIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgYmxvY2tzKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInXG4gICAgICAgIH1cbiAgICAgIH0sIF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snLFxuICAgICAgICAgIG1hcmdpblJpZ2h0OiAnMWVtJ1xuICAgICAgICB9XG4gICAgICB9LCBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gb25DbGljaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMxNC5uYXZpZ2F0ZVBhZ2UodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0sIFwiTmV4dCBQYWdlXCIpKSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaydcbiAgICAgICAgfVxuICAgICAgfSwgX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMTQubmF2aWdhdGVQYWdlKGZhbHNlKTtcbiAgICAgICAgfVxuICAgICAgfSwgXCJQcmV2aW91cyBQYWdlXCIpKSkpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29tbWVudDtcbn0oX3JlYWN0LkNvbXBvbmVudCk7XG5cbmV4cG9ydHMuQ29tbWVudCA9IENvbW1lbnQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbW1lbnQuanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./modules/coding_panel_modules/Comment.js\n");

/***/ }),

/***/ "./modules/coding_panel_modules/Rating.js":
/*!************************************************!*\
  !*** ./modules/coding_panel_modules/Rating.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rating = void 0;\n\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\n\nvar _axios = _interopRequireDefault(__webpack_require__(/*! axios */ \"./node_modules/axios/index.js\"));\n\nvar _reactStarRatingComponent = _interopRequireDefault(__webpack_require__(/*! react-star-rating-component */ \"./node_modules/react-star-rating-component/index.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar rating_submission_url = '/post_rating';\nvar rating_receiving_url = '/get_rating';\n\nvar SubmitRating =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SubmitRating, _Component);\n\n  function SubmitRating() {\n    _classCallCheck(this, SubmitRating);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SubmitRating).apply(this, arguments));\n  }\n\n  _createClass(SubmitRating, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return _react.default.createElement(\"div\", {\n        className: 'submitRating_content'\n      }, _react.default.createElement(\"h3\", null, \"Submit your rating here!\"), _react.default.createElement(_reactStarRatingComponent.default, {\n        name: \"Rating\",\n        starCount: 5,\n        value: this.props.rating,\n        onStarClick: function onStarClick(nextValue, prevValue, name) {\n          return _this.props.ratingOnClickHander(nextValue, prevValue, name);\n        }\n      }));\n    }\n  }]);\n\n  return SubmitRating;\n}(_react.Component);\n\nvar DisplayRating =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(DisplayRating, _Component2);\n\n  function DisplayRating(props) {\n    var _this2;\n\n    _classCallCheck(this, DisplayRating);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(DisplayRating).call(this, props));\n    _this2.state = {\n      ratings: 0\n    };\n    return _this2;\n  }\n\n  _createClass(DisplayRating, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n\n      _axios.default.get(rating_receiving_url, {\n        params: {\n          question_id: this.props.question_id,\n          is_for_road_map: is_for_road_map\n        }\n      }).then(function (response) {\n        _this3.setState({\n          ratings: response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        className: 'displayRating_content'\n      }, _react.default.createElement(\"h4\", null, \"Users' ratings\"), _react.default.createElement(_reactStarRatingComponent.default, {\n        name: \"Rating\",\n        starCount: 5,\n        value: this.state.ratings\n      }));\n    }\n  }]);\n\n  return DisplayRating;\n}(_react.Component);\n\nvar Rating =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(Rating, _Component3);\n\n  function Rating(props) {\n    var _this4;\n\n    _classCallCheck(this, Rating);\n\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(Rating).call(this, props));\n    _this4.state = {\n      rating: 0,\n      is_display_rating: false\n    };\n    return _this4;\n  }\n\n  _createClass(Rating, [{\n    key: \"ratingOnClickHander\",\n    value: function ratingOnClickHander(nextValue, prevValue, name) {\n      var _this5 = this;\n\n      this.setState({\n        rating: nextValue\n      });\n      var user = this.props.user;\n      var current_question_id = this.props.question_id;\n      var is_for_road_map = this.props.for_road_map === true ? 1 : 0;\n      console.log('is_for_road_map', is_for_road_map);\n\n      _axios.default.post(rating_submission_url, {\n        question_id: current_question_id,\n        is_for_road_map: is_for_road_map,\n        value: nextValue\n      }).then(function (response) {\n        _this5.setState({\n          is_display_rating: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return _react.default.createElement(\"div\", {\n        className: 'rating_content'\n      }, this.state.is_display_rating ? _react.default.createElement(DisplayRating, {\n        for_road_map: this.props.for_road_map,\n        question_id: this.props.question_id\n      }) : _react.default.createElement(SubmitRating, {\n        rating: this.state.rating,\n        ratingOnClickHander: function ratingOnClickHander(nextValue, prevValue, name) {\n          return _this6.ratingOnClickHander(nextValue, prevValue, name);\n        }\n      }));\n    }\n  }]);\n\n  return Rating;\n}(_react.Component);\n\nexports.Rating = Rating;\n\n//# sourceMappingURL=Rating.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./modules/coding_panel_modules/Rating.js\n");

/***/ })

}]);